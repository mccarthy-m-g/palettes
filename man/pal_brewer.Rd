% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/pal_brewer.R
\name{pal_brewer}
\alias{pal_brewer}
\title{Colour vector and colour palette interpolation}
\usage{
pal_brewer(
  palette,
  n = NULL,
  direction = 1,
  interpolate = c("linear", "spline")
)
}
\arguments{
\item{palette}{An object of class \code{palettes_palette} or \code{palettes_colour}.}

\item{n}{An integer specifying the number of colours to return.}

\item{direction}{Sets the order of colours in the scale. If 1, the default,
colours are ordered from first to last If -1, the order of colours is
reversed.}

\item{interpolate}{The interpolation method. Either "linear" (default) or
"spline".}
}
\value{
An object of class \code{palettes_palette} or \code{palettes_colour}.
}
\description{
Interpolate the set of colours in \code{palettes_palette} or \code{palettes_colour}
objects to create new colour palettes.
}
\examples{
# The class returned after interpolation matches the input class.
x <- pal_colour(c("red", "green", "blue"))
y <- pal_palette(my_pal = x)
pal_brewer(x)
pal_brewer(y)

# Choose between linear and spline interpolation.
pal_brewer(x, n = 7, interpolate = "linear")
pal_brewer(x, n = 7, interpolate = "spline")

# Palettes will have the same length after interpolation, regardless of the
# number of colours in the original palette.
z <- pal_palette(
  pal1 = c("red", "green", "blue"),
  pal2 = c("orange", "purple")
)
pal_brewer(z, n = 5)
}
